version: 2.1

orbs:
  helm: banzaicloud/helm@dev:0.0.7
  docker: circleci/docker@0.5.13

jobs:
  build:
    resource_class: medium+
    docker:
      - image: cimg/go:1.13
        environment:
          GOFLAGS: -mod=readonly

    steps:
      - checkout
      - run:
          name: Check generators for unwanted diffs
          command: |
            make check-diff
      - run:
          name: Run lint
          command: make lint
      - run:
          name: License
          command: |
            make license-cache
            make license-check
      - run:
          name: Test
          command: |
            make test

  e2e-test:
    machine:
      image: ubuntu-1604:201903-01
      docker_layer_caching: true
    environment:
      GO_VERSION: '1.13'
      K8S_VERSION: 'v1.15.7'
      #VAULT_VERSION: '1.0.0'
      KUBECONFIG: '/home/circleci/.kube/config'
      MINIKUBE_VERSION: 'v1.6.0'
      MINIKUBE_WANTUPDATENOTIFICATION: 'false'
      MINIKUBE_WANTREPORTERRORPROMPT: 'false'
      MINIKUBE_HOME: '/home/circleci'
      CHANGE_MINIKUBE_NONE_USER: 'true'
      HELM_VERSION: 'v3.0.3'
#      GOPATH: '/home/circleci/go'
    steps:
      - run:
          name: Setup minikube
          command: |
            curl -Lo minikube https://github.com/kubernetes/minikube/releases/download/${MINIKUBE_VERSION}/minikube-linux-amd64 \
            && chmod +x minikube \
            && sudo mv minikube /usr/local/bin/

      - run:
          name: Start minikube
          background: true
          command: |
            sudo -E minikube start --vm-driver=none --cpus 2 --memory 4096 --kubernetes-version=${K8S_VERSION}

      - run:
          name: Setup kubectl
          command: |
            curl -Lo kubectl https://storage.googleapis.com/kubernetes-release/release/${K8S_VERSION}/bin/linux/amd64/kubectl \
            && chmod +x kubectl \
            && sudo mv kubectl /usr/local/bin/

            mkdir -p ${HOME}/.kube
            touch ${HOME}/.kube/config

      - checkout
#      - run:
#          name: Create go directory
#          command: |
#            sudo mkdir /go
#            sudo chmod 777 /go
#
#      - run:
#          name: Setup golang
#          command: |
#            sudo rm -rf /usr/local/go
#            curl \
#              -Lo go.linux-amd64.tar.gz \
#              "https://dl.google.com/go/go${GO_VERSION}.linux-amd64.tar.gz" \
#            && sudo tar -C /usr/local -xzf go.linux-amd64.tar.gz
#            echo 'export PATH="$GOPATH/bin:$PATH"' >> "${BASH_ENV}"
#            rm go.linux-amd64.tar.gz

      - run:
          name: Build docker image
          command: |
            app_version="$(awk '/appVersion:/{print $2}' charts/thanos-operator/Chart.yaml)"
            docker build -t banzaicloud/thanos-operator:${app_version} .

      - run:
          name: Wait for minikube
          command: |
            timeout 180s bash \<<EOT
              set -o pipefail
              function is_ready()
              {
                kubectl get nodes -o json \
                  | jq '.items[].status.conditions[] | select(.type=="Ready" and .status=="True")'
              }

              until is_ready
              do
                sleep 1
              done
            EOT

      - run:
          name: Setup helm
          command: |
            curl -L "https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3" \
              | bash -s -- -v "${HELM_VERSION}"
            helm repo add stable https://kubernetes-charts.storage.googleapis.com
            helm repo add banzaicloud-stable https://kubernetes-charts.banzaicloud.com/
            helm rpeo update

      - run:
          name: Create monitor namespace
          command: |
            kubectl create namespace monitor

      - run:
          name: Start Minio
          command: |
            kubectl create -f hack/minio.yaml
            kubectl wait --namespace monitor --for=condition=available deployment/minio-deployment --timeout=120s
            minio="$(kubectl get pod --namespace monitor -l app=minio -o 'jsonpath={.items[0].metadata.name}')"
            kubectl wait --namespace monitor --for=condition=Ready pod "${minio}" --timeout=120s

      - run:
          name: Install thanos operator
          command: |
            kubectl create secret generic thanos \
              --from-file=object-store.yaml=hack/test-object-store.yaml \
              --namespace monitor

            helm install --namespace monitor monitor stable/prometheus-operator -f hack/test-thanos-sidecar.yaml
            helm install --namespace monitor thanos-operator ./charts/thanos-operator --set manageCrds=false

            kubectl wait --for=condition=Ready pods --all --namespace monitor
            sleep 3
            kubectl wait --for=condition=Ready pods --all --namespace monitor
            kubectl get all --namespace monitor

workflows:
  version: 2
  build:
    jobs:
      - build:
          context: Default
      - e2e-test:
          requires:
            - build
#      - docker/publish:
#          name: Publish docker image from branches
#          executor:
#            name: docker/machine
#            dlc: true
#          context: dockerhub
#          deploy: true
#          image: banzaicloud/thanos-operator
#          tag: $CIRCLE_BRANCH
#          requires:
#            - build
#          filters:
#            branches:
#              ignore: master
#            tags:
#              ignore: /.*/
#      - docker/publish:
#          name: Publish latest docker image from master
#          executor:
#            name: docker/machine
#            dlc: true
#          context: dockerhub
#          deploy: true
#          image: banzaicloud/thanos-operator
#          tag: master
#          requires:
#            - build
#          filters:
#            branches:
#              only: master
#            tags:
#              ignore: /.*/
#      - docker/publish:
#          name: Publish tagged docker image
#          executor:
#            name: docker/machine
#            dlc: true
#          context: dockerhub
#          deploy: true
#          image: banzaicloud/thanos-operator
#          tag: $CIRCLE_TAG
#          filters:
#            tags:
#              only: /^[0-9]+\.[0-9]+\.[0-9]+(?:-(?:dev|rc)\.[0-9]+)?$/
#            branches:
#              ignore: /.*/
#
#  helm-chart:
#    jobs:
#      - helm/lint-chart:
#          name: 'Helm lint'
#          filters:
#            tags:
#              ignore: /.*/
#
#      - helm/publish-chart:
#          name: 'Publish chart'
#          context: helm
#          filters:
#            branches:
#              ignore: /.*/
#            tags:
#              only: /chart\/.*\/\d+.\d+.\d+.*/
